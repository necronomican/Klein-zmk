/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define NUM  2
#define FUN  3
#define SYM  4
#define MEDIA  5
#define BLU 6

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <180>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
//          ------------------------------------------------------------------------------------------------------------
//          |  Q  |  W  |  E   |  R   |  T   |                                           |  Y   |  U    |  I    |  O   |   P   |
//          |  A  |  S  |  D   |  F   |  G   |                                           |  H   |  J    |  K    |  L   |   '   |
//          |  Z  |  X  |  C   |  V   |  B   |                                           |  N   |  M    |  ,    |  .   |   /   |
//                      | ESC  | SPC |  TAB | BOOTLOADER |                         | MUTE | RET | BKSP | DEL |

            bindings = <
&kp Q          &kp W          &kp E          &kp R          &kp T               &kp Y          &kp U          &kp I          &kp O          &kp P
&mt LGUI A     &mt LALT S     &mt LCTRL D    &mt LSHFT F    &kp G               &kp H          &mt RSHFT J    &mt RCTRL K    &mt RALT L     &mt LGUI SQT
&kp Z          &kp X          &kp C          &kp V          &kp B               &kp N          &kp M          &kp COMMA      &kp DOT        &kp FSLH
&lt MEDIA ESC  &lt NAV SPACE  &lt BLU TAB    &bootloader                                       &kp K_MUTE     &lt SYM RET    &lt NUM BKSP   &lt FUN DEL
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(LG(DOWN_ARROW)) LC(LG(UP_ARROW))>;
        };

        nav_layer {

            bindings = <
&trans         &trans         &trans         &trans        &trans              &kp PG_UP   &trans     &kp UP_ARROW      &kp HOME     &trans
&trans         &kp LALT       &kp LCTRL      &kp LGUI      &trans              &kp PG_DN   &kp LEFT   &kp DOWN    &kp RIGHT    &trans
&trans         &trans         &trans         &kp CAPSLOCK  &trans              &kp INSERT  &kp HOME   &kp END     &trans       &trans
&trans         &trans         &trans         &bootloader                                       &bt BT_NXT     &kp RET        &kp BKSP       &kp DEL
            >;
        sensor-bindings = <&inc_dec_kp LC(LG(DOWN_ARROW)) LC(LG(UP_ARROW)) &inc_dec_kp LS(LG(DOWN_ARROW)) LS(LG(UP_ARROW))>;
        };

        num_layer {
            
            bindings = <
&kp GRAVE       &kp N7         &kp N8         &kp N9         &kp RBKT            &trans         &trans         &trans         &trans         &trans
&kp SEMI       &kp N4         &kp N5         &kp N6         &kp EQUAL           &trans         &kp LGUI      &kp LCTRL      &kp LALT       &kp SEMI
&trans      &kp N1         &kp N2         &kp N3         &kp BSLH               &trans         &trans         &trans         &trans         &trans
&kp PERIOD     &kp N0         &kp MINUS      &bootloader                                       &bootloader    &trans         &trans         &trans
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        fun_layer {
            
            bindings = <
&kp F12        &kp F7         &kp F8         &kp F9         &kp PSCRN           &trans         &trans         &trans         &trans         &trans
&kp F11        &kp F4         &kp F5         &kp F6         &kp SYSREQ          &trans         &kp LGUI      &kp LCTRL      &kp LALT        &trans
&kp F10        &kp F1         &kp F2         &kp F3         &kp PAUSE_BREAK     &trans         &trans         &trans         &trans         &trans
&kp ESC        &kp SPACE      &kp TAB        &bootloader                                       &bootloader    &trans         &trans         &trans
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        sym_layer {
            bindings = <
&kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT          &kp CARET  &kp AMPS   &kp ASTRK  &kp UNDSCR  &kp PLUS
&kp LBRC   &kp LCBR   &kp LPRN   &kp RPRN   &kp RCBR           &kp RBRC   &kp EQUAL  &kp MINUS  &kp GRAVE  &kp PIPE
&kp BSLH   &kp LT     &kp GT     &kp QUES   &kp SEMI           &kp COLON  &kp SQT    &kp DQT    &kp TILD   &kp FSLH
&trans     &trans     &trans     &bootloader                            &bootloader  &trans     &trans     &trans
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        media_layer {
            
            bindings = <
&trans         &trans         &trans         &trans         &trans              &trans         &trans         &trans         &trans         &trans
&trans       &kp LALT       &kp LCTRL      &kp LGUI      &trans              &kp K_PREV     &kp K_VOL_DN   &kp K_VOL_UP   &kp K_NEXT     &trans
&trans         &trans         &trans         &trans         &trans              &trans         &trans         &trans         &trans         &trans
&trans         &trans         &trans         &bootloader                                       &bootloader    &kp K_STOP2    &kp K_PP       &kp K_MUTE
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        blu_layer {
            
            bindings = <
&trans         &trans         &trans         &trans         &trans              &bt BT_CLR     &trans         &trans         &trans         &trans
&trans         &bt BT_SEL 3   &bt BT_SEL 4   &trans         &trans              &trans         &bt BT_PRV     &bt BT_NXT     &trans         &trans
&trans         &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &trans              &trans         &trans         &trans         &trans         &trans
&trans         &trans         &trans         &trans         &trans                             &trans         &trans         &trans         &trans
            >;
        sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};
 